import {
    actionChangeMenuCollapse, actionChangeMenuItem, actionChangeLogOut,
    actionChangeIsAuth, actionChangeIsShowLoginModal, actionChangeLoginInput, actionChangePasswordInput, actionChangePwt,
    actionChangeJournalFilterCollapse, actionChangeDataJournal, actionChangeSelectRowJournal, actionChangeJournalImage,
    actionChangeZoomImageJournal, actionChangeJournalImageProgress, actionChangeIsShowRePhotographedModal, actionChangeRephotoReasonsList,
    actionChangeReasonsItem, actionChangeCleanRephotoReasons, actionChangeOtherReason, actionChangeGetStatusList,
    actionChangeSelectStatus, actionChangeDateFromFilter, actionChangeDateToFilter, actionChangeIsJournalProgress,
    actionChangeIsGetTaskByKeyProgress, actionChangeSetOrderData, actionChangeIsGetOrderFromWork, actionChangeIsStopGetOrderFromWorkModal,
    actionChangeMovedFrom, actionСhangeScanMainCollapse, actionChangePaymentInformationCollapse, actionСhangeTotalCollapse,
    actionChangeSenderCollapse, actionChangeReceiverCollapse, actionChangeInformationAboutCargoCollapse, actionChangeScanOrderNumberInput,
    actionChangeScanDateInput, actionChangeScanOrderTypeInput, actionChangeScanOrderModeDeliveryInput, actionChangeOrderCitySenderInput,
    actionChangeOrderCityReceiverInput, actionChangeOrderContragentSenderInput, actionChangeOrderContragentReceiverInput,
    actionChangeIsOpenDropdownSenderFio, actionChangeIsOpenDropdownReceiverFio, actionChangeSenderFioInput, actionChangeReceiverFioInput,
    actionChangeGetPhoneTypes, actionChangeSetPhones, actionChangeSetPassport, actionChangeSetPlaces, actionChangeJournalCourierCityInput,
    actionChangeJournalOrderNumberInput, actionСhangeJournalCourierInput, actionChangeJournalOnlyUrgentInput, actionChangeSetTimeOut,
    actionChangeOrderContragentOtherInput, actionChangePayerPayType, actionChangePayerType, actionChangeSetOrderTariffsData, actionChangeIsProgressTariffs,
    actionChangeIsProgressAdditionalServices, actionChangeSetOrderCalculationAndAdditionalServicesData, actionChangeIsProgressCurrency,
    actionChangeSetOrderCurrencyData, actionChangeIsProgressCalculation, actionChangeParamsAdditionalServicesInput, actionChangeIsProgressIsExistsOrderNumber,
    actionChangeIsIsExistsOrderNumber, actionChangeOrderPvzInput, actionChangeSetPvzList

} from "./actions/actions";

export const dispatchs = (dispatch) =>
    (
        {
            dispatch:
                {

                    changeMenuCollapse: (v) => dispatch(actionChangeMenuCollapse(v)),
                    changeMenuItem: (v) => dispatch(actionChangeMenuItem(v)),
                    changeLogOut: () => dispatch(actionChangeLogOut()),

                    changeIsAuth: (v) => dispatch(actionChangeIsAuth(v)),
                    changeIsShowLoginModal: (v) => dispatch(actionChangeIsShowLoginModal(v)),
                    changeLoginInput: (v) => dispatch(actionChangeLoginInput(v)),
                    changePasswordInput: (v) => dispatch(actionChangePasswordInput(v)),
                    changePwt: (v) => dispatch(actionChangePwt(v)),

                    changeJournalFilterCollapse: (v) => dispatch(actionChangeJournalFilterCollapse(v)),
                    changeDataJournal: (v) => dispatch(actionChangeDataJournal(v)),
                    changeSelectRowJournal: (v) => dispatch(actionChangeSelectRowJournal(v)),
                    changeJournalImage: (v) => dispatch(actionChangeJournalImage(v)),
                    changeZoomImageJournal: (v) => dispatch(actionChangeZoomImageJournal(v)),
                    changeJournalImageProgress: (v) => dispatch(actionChangeJournalImageProgress(v)),
                    changeIsShowRePhotographedModal: (v) => dispatch(actionChangeIsShowRePhotographedModal(v)),
                    changeRephotoReasonsList: (v) => dispatch(actionChangeRephotoReasonsList(v)),
                    changeReasonsItem: (v) => dispatch(actionChangeReasonsItem(v)),
                    changeCleanRephotoReasons: () => dispatch(actionChangeCleanRephotoReasons()),
                    changeOtherReason: (v) => dispatch(actionChangeOtherReason(v)),
                    changeGetStatusList: (v) => dispatch(actionChangeGetStatusList(v)),
                    changeSelectStatus: (v) => dispatch(actionChangeSelectStatus(v)),
                    changeDateFromFilter: (v) => dispatch(actionChangeDateFromFilter(v)),
                    changeDateToFilter: (v) => dispatch(actionChangeDateToFilter(v)),
                    changeIsJournalProgress: (v) => dispatch(actionChangeIsJournalProgress(v)),
                    changeJournalCourierCityInput: (v) => dispatch(actionChangeJournalCourierCityInput(v)),
                    changeJournalOrderNumberInput: (v) => dispatch(actionChangeJournalOrderNumberInput(v)),
                    changeJournalCourierInput: (v) => dispatch(actionСhangeJournalCourierInput(v)),
                    changeJournalOnlyUrgentInput: (v) => dispatch(actionChangeJournalOnlyUrgentInput(v)),

                    changeIsGetTaskByKeyProgress: (v) => dispatch(actionChangeIsGetTaskByKeyProgress(v)),
                    changeSetOrderData: (v) => dispatch(actionChangeSetOrderData(v)),
                    changeIsGetOrderFromWork: (v) => dispatch(actionChangeIsGetOrderFromWork(v)),
                    changeIsStopGetOrderFromWorkModal: (v) => dispatch(actionChangeIsStopGetOrderFromWorkModal(v)),
                    changeMovedFrom: (v) => dispatch(actionChangeMovedFrom(v)),
                    changeScanMainCollapse: (v) => dispatch(actionСhangeScanMainCollapse(v)),
                    changePaymentInformationCollapse: (v) => dispatch(actionChangePaymentInformationCollapse(v)),
                    changeTotalCollapse: (v) => dispatch(actionСhangeTotalCollapse(v)),
                    changeSenderCollapse: (v) => dispatch(actionChangeSenderCollapse(v)),
                    changeReceiverCollapse: (v) => dispatch(actionChangeReceiverCollapse(v)),
                    changeInformationAboutCargoCollapse: (v) => dispatch(actionChangeInformationAboutCargoCollapse(v)),
                    changeScanOrderNumberInput: (v) => dispatch(actionChangeScanOrderNumberInput(v)),
                    changeScanDateInput: (v) => dispatch(actionChangeScanDateInput(v)),
                    changeScanOrderTypeInput: (v) => dispatch(actionChangeScanOrderTypeInput(v)),
                    changeScanOrderModeDeliveryInput: (v) => dispatch(actionChangeScanOrderModeDeliveryInput(v)),
                    changeOrderCitySenderInput: (v) => dispatch(actionChangeOrderCitySenderInput(v)),
                    changeOrderCityReceiverInput: (v) => dispatch(actionChangeOrderCityReceiverInput(v)),
                    changeOrderContragentSenderInput: (v) => dispatch(actionChangeOrderContragentSenderInput(v)),
                    changeOrderContragentReceiverInput: (v) => dispatch(actionChangeOrderContragentReceiverInput(v)),
                    changeOrderPvzInput: (v) => dispatch(actionChangeOrderPvzInput(v)),
                    changeIsOpenDropdownSenderFio: (v) => dispatch(actionChangeIsOpenDropdownSenderFio(v)),
                    changeIsOpenDropdownReceiverFio: (v) => dispatch(actionChangeIsOpenDropdownReceiverFio(v)),
                    changeSenderFioInput: (v) => dispatch(actionChangeSenderFioInput(v)),
                    changeReceiverFioInput: (v) => dispatch(actionChangeReceiverFioInput(v)),
                    changeGetPhoneTypes: (v) => dispatch(actionChangeGetPhoneTypes(v)),
                    changeSetPhones: (v) => dispatch(actionChangeSetPhones(v)),
                    changeSetPassport: (v) => dispatch(actionChangeSetPassport(v)),
                    changeSetPlaces: (v) => dispatch(actionChangeSetPlaces(v)),
                    changeOrderContragentOtherInput: (v) => dispatch(actionChangeOrderContragentOtherInput(v)),
                    changePayerPayType: (v) => dispatch(actionChangePayerPayType(v)),
                    changePayerType: (v) => dispatch(actionChangePayerType(v)),
                    changeSetOrderTariffsData: (v) => dispatch(actionChangeSetOrderTariffsData(v)),
                    changeIsProgressTariffs: (v) => dispatch(actionChangeIsProgressTariffs(v)),
                    changeIsProgressAdditionalServices: (v) => dispatch(actionChangeIsProgressAdditionalServices(v)),
                    changeIsProgressCalculation: (v) => dispatch(actionChangeIsProgressCalculation(v)),
                    changeSetOrderCalculationAndAdditionalServicesData: (v) => dispatch(actionChangeSetOrderCalculationAndAdditionalServicesData(v)),
                    changeIsProgressCurrency: (v) => dispatch(actionChangeIsProgressCurrency(v)),
                    changeSetOrderCurrencyData: (v) => dispatch(actionChangeSetOrderCurrencyData(v)),
                    changeParamsAdditionalServicesInput: (v) => dispatch(actionChangeParamsAdditionalServicesInput(v)),
                    changeIsProgressIsExistsOrderNumber: (v) => dispatch(actionChangeIsProgressIsExistsOrderNumber(v)),
                    changeIsIsExistsOrderNumber: (v) => dispatch(actionChangeIsIsExistsOrderNumber(v)),
                    changeSetPvzList: (v) => dispatch(actionChangeSetPvzList(v)),

                }
        }
    )
